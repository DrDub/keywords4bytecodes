<project name="mulan" default="package" basedir=".">

	<property name="lib.dir" value="${basedir}/lib" description="Directory containing all 3rd party jars." />
	<property name="src.dir" value="src" description="Source code directory." />
	<property name="test.dir" value="test" description="Directory containing tests." />
	<property name="javadoc.dir" value="apidoc" description="Directory for generated API documentation." />
	<property name="dist.dir" value="${basedir}/dist" description="Directory for distribution artifacts, e.g. jars." />

	<property name="target.dir" value="${basedir}/target" description="All artifacts produced by the build, except 'docs/api' and 'dist', goes here." />
	<property name="target.classes.dir" value="${target.dir}/classes" description="Directory for compiled source code classes." />
	<property name="target.testclasses.dir" value="${target.dir}/test-classes" description="Directory for compiled test classes." />
	<property name="target.junit.reports.dir" value="${target.dir}/test-reports" description="Directory for generated xml tests reports." />
	<property name="target.junit.summary.dir" value="${target.dir}/test-summary" description="Directory for generated tests summary report in htlm format." />

	<property name="coverage.enabled" value="false" description="Enables/disables the converage generation while runing unit-tests." />
	<property name="target.coverage.instrumented.dir" value="${target.dir}/coverage-instrumented" description="Directory where cobertura place instrumented files necessary for coverage tracking."/>
	<property name="target.coverage.report.dir" value="${target.dir}/coverage-reports" description="Directory for generated coverage reports." />

	<property name="test.includes" value="mulan/**/*Test*" description="Default pattern used to identify tests implementation." />

	<property name="mulan.title" value="Mulan - A Java library for multi-label learning" />
	<property name="mulan.version" value="1.4.0" />
	<property name="weka.version" value="3.7.6" />

	<path id="dependency.libs.path">
		<fileset dir="${lib.dir}">
			<include name="weka-${weka.version}.jar" />
		</fileset>
	</path>
	
	<path id="dependency.test.libs.path">
		<fileset dir="${lib.dir}">
			<include name="test/**/*.jar"/>
		</fileset>
	</path>

	<taskdef classpathref="dependency.test.libs.path" resource="emma_ant.properties" />
	
	
	<target name="clean" description="Deletes the build directory.">
		<delete dir="${target.dir}" />
		<delete dir="${javadoc.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="build" description="Builds the source code.">
		<mkdir dir="${target.classes.dir}" />
		<javac source="1.6" target="1.6" 
			   deprecation="true" debug="true" optimize="false" 
			   srcdir="${src.dir}" 
			   destdir="${target.classes.dir}">
			<classpath refid="dependency.libs.path" />
		</javac>
		<copy todir="${target.classes.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xsd"/>
			</fileset>
		</copy>
	</target>

	<target name="build-test" depends="build" description="Builds tests classes.">
		<mkdir dir="${target.testclasses.dir}" />
		<javac source="1.6" target="1.6" 
			   deprecation="true" debug="true" optimize="false" 
			   srcdir="${test.dir}" 
			   destdir="${target.testclasses.dir}">
			<classpath refid="dependency.libs.path" />
			<classpath refid="dependency.test.libs.path" />
			<classpath location="${target.classes.dir}"/>
		</javac>
	</target>

	<target name="package" depends="javadoc" description="Creates all distribution packages, such as jar archives." >
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/mulan-src.jar" basedir="${src.dir}">
			<metainf file="license.txt"/>
			<manifest>
				<attribute name="Implementation-Title" value="${mulan.title}"/>
				<attribute name="Implementation-Version" value="${mulan.version}"/>
			</manifest>
		</jar>
		<jar jarfile="${dist.dir}/mulan.jar">
			<metainf file="license.txt"/>
			<manifest>
				<attribute name="Implementation-Title" value="${mulan.title}"/>
				<attribute name="Implementation-Version" value="${mulan.version}"/>
			</manifest>
			<fileset dir="${target.classes.dir}" includes="mulan/**/**"/>
		</jar>
		
		<zip destfile="${dist.dir}/mulan-${mulan.version}.zip" >
			<zipfileset prefix="mulan-${mulan.version}" dir="${basedir}" includes="${javadoc.dir}/**, data/*.*" />
			<zipfileset prefix="mulan-${mulan.version}" dir="${dist.dir}" includes="*.jar" />
			<zipfileset prefix="mulan-${mulan.version}" file="${lib.dir}/weka-${weka.version}.jar" />
			<zipfileset prefix="mulan-${mulan.version}" file="license.txt"/>
			<zipfileset prefix="mulan-${mulan.version}" file="readme.txt"/>
			<zipfileset prefix="mulan-${mulan.version}" file="changelog.txt"/>
			<zipfileset prefix="mulan-${mulan.version}" file="build.xml"/>
		</zip> 
	</target>

	<!--
		Run unit tests with coverage and generate reports. 
		It's possible to run specific tests by passing in the "test.includes" 
		and (optionally) "test.excludes" properties through the	command line, as below:
			ant tests -Dtest.includes=mulan/classifier/**/*Test*
	-->
	<target name="test" depends="build-test"  description="Runs unit tests with coverage and generate reports for both.">
			<mkdir dir="${target.junit.reports.dir}"/>
			<mkdir dir="${target.junit.summary.dir}"/>
			<mkdir dir="${target.coverage.instrumented.dir}"/>
			<mkdir dir="${target.coverage.report.dir}"/>
			
			<delete file="${target.coverage.instrumented.dir}/cobertura.ser" />

			<emma enabled="${coverage.enabled}" >
		      	<instr  instrpath="${target.classes.dir}"	
		      			mode="copy"
		             	destdir="${target.coverage.instrumented.dir}"	
		             	metadatafile="${target.coverage.instrumented.dir}/metadata.emma"
		             	merge="yes" >
		      		<filter excludes="*.examples.*" />
	      		</instr>
		    </emma>
		
			<junit fork="yes" dir="${basedir}" showoutput="no" filtertrace="yes" forkmode="once" printsummary="yes" haltonfailure="no" haltonerror="no" failureproperty="test.failed">
				<jvmarg line="-Djava.awt.headless=true -Xmx512m -XX:MaxPermSize=128m"/>
				<!-- start: stuff for coverage -->
				<jvmarg value="-Demma.coverage.out.file=${target.coverage.instrumented.dir}/coverage.emma" />
		      	<jvmarg value="-Demma.coverage.out.merge=true" />
				<classpath location="${target.coverage.instrumented.dir}"/>
				<!-- end: stuff for coverage -->
				<classpath location="${target.testclasses.dir}" />
				<classpath location="${target.classes.dir}"/>
				<classpath location="${test.dir}"/>
				<classpath refid="dependency.libs.path" />
				<classpath refid="dependency.test.libs.path" />
				<formatter type="xml"/>
                <formatter type="brief" usefile="false"/>
				<batchtest  todir="${target.junit.reports.dir}">
					<fileset dir="${target.testclasses.dir}" includes="${test.includes}" excludes="${test.excludes}"/>
				</batchtest>
			</junit>
			
			<junitreport todir="${target.junit.reports.dir}">
				<fileset dir="${target.junit.reports.dir}">
					<include name="TEST-*.xml"/>
				</fileset>
				<report todir="${target.junit.summary.dir}"/>
			</junitreport>

			<emma enabled="${coverage.enabled}" >
		      <report sourcepath="${src.dir}" metrics="method:70,block:80,line:80,class:100" >
		      	<fileset dir="${target.coverage.instrumented.dir}">
		      		<include name="*.emma" />
			    </fileset>
      	        <html outfile="${target.coverage.report.dir}/coverage.html"
      	             depth="method"
      	             columns="name,line,method,block,class"
      	        />
		      </report>
		    </emma>
			
			<fail if="test.failed" message="Tests failed." />
		</target>
	
	<target name="javadoc" description="Generates JavaDocs API documentation.">
		<mkdir dir="${javadoc.dir}" />
		<javadoc packagenames="mulan.*" sourcepath="${src.dir}" destdir="${javadoc.dir}" 
			doctitle="Mulan ${mulan.version}" windowtitle="Mulan" failonerror="yes">
			<classpath refid="dependency.libs.path" />
			<excludepackage name="mulan.examples"/>
			<link href="http://java.sun.com/j2se/1.6.0/docs/api/" />
			<link href="http://weka.sourceforge.net/doc.dev/" />
		</javadoc>
	</target>

</project>
